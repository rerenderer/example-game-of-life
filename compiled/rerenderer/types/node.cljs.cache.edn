;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name rerenderer.types.node, :imports nil, :requires {rerenderer.types.component rerenderer.types.component, rerenderer.types.render-result rerenderer.types.render-result, rerenderer.platform.core rerenderer.platform.core}, :uses {props rerenderer.types.component, childs rerenderer.types.component, Component->RenderResult rerenderer.types.render-result, render rerenderer.platform.core, calculate-path rerenderer.types.component}, :defs {Node {:num-fields 5, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name rerenderer.types.node/Node, :file "resources/public/compiled/rerenderer/types/node.cljs", :end-column 16, :type true, :column 12, :internal-ctor true, :line 6, :record true, :end-line 6, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Node {:protocol-inline nil, :meta {:file "/home/nvbn/work/farley/org.rerenderer.game-of-life/resources/public/compiled/rerenderer/types/node.cljs", :line 6, :column 12, :end-line 6, :end-column 16, :internal-ctor true, :factory :positional, :arglists (quote ([childs script canvas x y]))}, :name rerenderer.types.node/->Node, :variadic false, :file "resources/public/compiled/rerenderer/types/node.cljs", :end-column 16, :method-params ([childs script canvas x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 6, :end-line 6, :max-fixed-arity 5, :fn-var true, :arglists (quote ([childs script canvas x y]))}, map->Node {:protocol-inline nil, :meta {:file "/home/nvbn/work/farley/org.rerenderer.game-of-life/resources/public/compiled/rerenderer/types/node.cljs", :line 6, :column 12, :end-line 6, :end-column 16, :internal-ctor true, :factory :map, :arglists (quote ([G__24786]))}, :name rerenderer.types.node/map->Node, :variadic false, :file "resources/public/compiled/rerenderer/types/node.cljs", :end-column 16, :method-params ([G__24786]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__24786]))}, Component->Node {:protocol-inline nil, :meta {:file "/home/nvbn/work/farley/org.rerenderer.game-of-life/resources/public/compiled/rerenderer/types/node.cljs", :line 8, :column 7, :end-line 8, :end-column 22, :arglists (quote ([component])), :doc "Creates node from component."}, :name rerenderer.types.node/Component->Node, :variadic false, :file "resources/public/compiled/rerenderer/types/node.cljs", :end-column 22, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Creates node from component."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y x :childs :script y childs script :canvas canvas :x}, :order [:childs :script :canvas :x :y childs script canvas x y]}, :doc nil}