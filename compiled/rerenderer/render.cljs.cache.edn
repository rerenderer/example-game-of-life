;; Analyzed by ClojureScript 1.7.228
{:use-macros {go-loop cljs.core.async.macros}, :excludes #{}, :name rerenderer.render, :imports nil, :requires {cljs.core.async cljs.core.async, rerenderer.platform.core rerenderer.platform.core, rerenderer.types.node rerenderer.types.node, rerenderer.types.render-result rerenderer.types.render-result, rerenderer.lang.gc rerenderer.lang.gc, rerenderer.lang.forms rerenderer.lang.forms}, :uses {timeout cljs.core.async, <! cljs.core.async, sanitize-cache! rerenderer.types.render-result, chan cljs.core.async, serialize rerenderer.lang.forms, Component->Node rerenderer.types.node, apply-script! rerenderer.platform.core, sliding-buffer cljs.core.async, gc rerenderer.lang.gc, render-to rerenderer.platform.core}, :defs {render-childs {:protocol-inline nil, :meta {:file "/home/nvbn/work/farley/org.rerenderer.game-of-life/resources/public/compiled/rerenderer/render.cljs", :line 10, :column 8, :end-line 10, :end-column 21, :private true, :arglists (quote ([node])), :doc "Renders node childs to node canvas."}, :private true, :name rerenderer.render/render-childs, :variadic false, :file "resources/public/compiled/rerenderer/render.cljs", :end-column 21, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node])), :doc "Renders node childs to node canvas."}, render-node {:protocol-inline nil, :meta {:file "/home/nvbn/work/farley/org.rerenderer.game-of-life/resources/public/compiled/rerenderer/render.cljs", :line 15, :column 8, :end-line 15, :end-column 19, :private true, :arglists (quote ([node])), :doc "Render node and all childs recursevly."}, :private true, :name rerenderer.render/render-node, :variadic false, :file "resources/public/compiled/rerenderer/render.cljs", :end-column 19, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node])), :doc "Render node and all childs recursevly."}, render-component! {:protocol-inline nil, :meta {:file "/home/nvbn/work/farley/org.rerenderer.game-of-life/resources/public/compiled/rerenderer/render.cljs", :line 27, :column 8, :end-line 27, :end-column 25, :private true, :arglists (quote ([component options])), :doc "Renders component and send script to platfrom side."}, :private true, :name rerenderer.render/render-component!, :variadic false, :file "resources/public/compiled/rerenderer/render.cljs", :end-column 25, :method-params ([component options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component options])), :doc "Renders component and send script to platfrom side."}, get-render-ch {:protocol-inline nil, :meta {:file "/home/nvbn/work/farley/org.rerenderer.game-of-life/resources/public/compiled/rerenderer/render.cljs", :line 37, :column 7, :end-line 37, :end-column 20, :arglists (quote ([root options])), :doc "Returns channel that waits for states."}, :name rerenderer.render/get-render-ch, :variadic false, :file "resources/public/compiled/rerenderer/render.cljs", :end-column 20, :method-params ([root options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([root options])), :doc "Returns channel that waits for states."}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:childs :else :script :recur :fps-limit :canvas}, :order [:childs :script :canvas :recur :fps-limit :else]}, :doc nil}