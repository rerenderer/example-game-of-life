;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name rerenderer.debug, :imports nil, :requires nil, :uses nil, :defs {rerender! {:protocol-inline nil, :meta {:file "/home/nvbn/work/farley/org.rerenderer.game-of-life/resources/public/compiled/rerenderer/debug.cljs", :line 3, :column 7, :end-line 3, :end-column 16, :arglists (quote ([game])), :doc "Rerenders game manualy, useful with figwheel."}, :name rerenderer.debug/rerender!, :variadic false, :file "resources/public/compiled/rerenderer/debug.cljs", :end-column 16, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game])), :doc "Rerenders game manualy, useful with figwheel."}, swap-state! {:protocol-inline nil, :meta {:file "/home/nvbn/work/farley/org.rerenderer.game-of-life/resources/public/compiled/rerenderer/debug.cljs", :line 9, :column 7, :end-line 9, :end-column 18, :arglists (quote ([game & args])), :doc "Swaps game state, works like atom's swap!", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(game args)], :arglists ([game & args]), :arglists-meta (nil)}}, :name rerenderer.debug/swap-state!, :variadic true, :file "resources/public/compiled/rerenderer/debug.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(game args)], :arglists ([game & args]), :arglists-meta (nil)}, :method-params [(game args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists ([game & args]), :doc "Swaps game state, works like atom's swap!"}, reset-state! {:protocol-inline nil, :meta {:file "/home/nvbn/work/farley/org.rerenderer.game-of-life/resources/public/compiled/rerenderer/debug.cljs", :line 14, :column 7, :end-line 14, :end-column 19, :arglists (quote ([game value])), :doc "Resets game state, works like atom's reset!"}, :name rerenderer.debug/reset-state!, :variadic false, :file "resources/public/compiled/rerenderer/debug.cljs", :end-column 19, :method-params ([game value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([game value])), :doc "Resets game state, works like atom's reset!"}, reset-state-to-initial! {:protocol-inline nil, :meta {:file "/home/nvbn/work/farley/org.rerenderer.game-of-life/resources/public/compiled/rerenderer/debug.cljs", :line 19, :column 7, :end-line 19, :end-column 30, :arglists (quote ([game])), :doc "Resets game state to initial value."}, :name rerenderer.debug/reset-state-to-initial!, :variadic false, :file "resources/public/compiled/rerenderer/debug.cljs", :end-column 30, :method-params ([game]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([game])), :doc "Resets game state to initial value."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:state-atom :initial-state}, :order [:state-atom :initial-state]}, :doc nil}